type Result_2 = 
 variant {
   err: text;
   ok: nat;
 };
type Result_1 = 
 variant {
   err: text;
   ok: Property;
 };
type Result = 
 variant {
   err: text;
   ok;
 };
type Property = 
 record {
   address: text;
   description: opt text;
   id: nat;
   rentAmount: nat;
 };
type Payment = 
 record {
   amount: nat;
   id: nat;
   propertyId: nat;
   timestamp: int;
   userId: principal;
 };
service : {
  addProperty: (text, nat, opt text) -> (Result_2);
  assignProperty: (nat) -> (Result);
  createUser: (text) -> (Result);
  deleteProperty: (nat) -> (Result);
  getAllProperties: () -> (vec Property) query;
  getPaymentHistory: (principal) -> (vec Payment) query;
  getProperty: (nat) -> (Result_1) query;
  payRent: (nat) -> (Result);
  updateProperty: (nat, text, nat, opt text) -> (Result);
}
